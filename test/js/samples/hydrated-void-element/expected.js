/* generated by Svelte vX.Y.Z */
import {
	SvelteComponent,
	attr,
	children,
	claim_element,
	claim_space,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "svelte/internal";

function create_fragment(ctx) {
	let img;
	let t;
	let div;

	return {
		c() {
			img = element("img");
			t = space();
			div = element("div");
			this.h();
		},
		l(nodes) {
			img = claim_element(nodes, "IMG", { src: true, alt: true });
			t = claim_space(nodes);
			div = claim_element(nodes, "DIV", {});
			children(div).forEach(detach);
			this.h();
		},
		h() {
			attr(img, "src", "donuts.jpg");
			attr(img, "alt", "donuts");
		},
		m(target, anchor) {
			insert(target, img, anchor);
			insert(target, t, anchor);
			insert(target, div, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(img);
			if (detaching) detach(t);
			if (detaching) detach(div);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;