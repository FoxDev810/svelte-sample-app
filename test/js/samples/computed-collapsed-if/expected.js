/* generated by Svelte vX.Y.Z */
import { SvelteComponent as SvelteComponent_1, flush, init, noop, run, safe_not_equal } from "svelte/internal.js";

function create_fragment(component, ctx) {
	var current;

	return {
		c: noop,
		m: noop,
		p: noop,
		i: noop,
		o: run,
		d: noop
	};
}

function define($$self, $$props) {
	let { x } = $$props;

	function a() {
		return x * 2;
	}

	function b() {
		return x * 3;
	}

	$$self.$$.get = () => ({ x, a, b });

	$$self.$$.set = $$props => {
		if ('x' in $$props) x = $$props.x;
	};
}

class SvelteComponent extends SvelteComponent_1 {
	constructor(options) {
		super();
		init(this, options, define, create_fragment, safe_not_equal);
	}

	get x() {
		return this.$$.get().x;
	}

	set x(value) {
		this.$set({ x: value });
		flush();
	}

	get a() {
		return this.$$.get().a;
	}

	get b() {
		return this.$$.get().b;
	}
}

export default SvelteComponent;