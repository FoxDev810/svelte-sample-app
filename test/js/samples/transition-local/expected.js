/* generated by Svelte vX.Y.Z */
import { SvelteComponent as SvelteComponent_1, add_render_callback, createComment, createElement, create_in_transition, detachNode, flush, init, insert, noop, safe_not_equal } from "svelte/internal";

// (8:0) {#if x}
function create_if_block(ctx) {
	var if_block_anchor;

	var if_block = (ctx.y) && create_if_block_1(ctx);

	return {
		c() {
			if (if_block) if_block.c();
			if_block_anchor = createComment();
		},

		m(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
		},

		p(changed, ctx) {
			if (ctx.y) {
				if (!if_block) {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
				if_block.i(1);
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},

		d(detach) {
			if (if_block) if_block.d(detach);

			if (detach) {
				detachNode(if_block_anchor);
			}
		}
	};
}

// (9:1) {#if y}
function create_if_block_1(ctx) {
	var div, div_intro;

	return {
		c() {
			div = createElement("div");
			div.textContent = "...";
		},

		m(target, anchor) {
			insert(target, div, anchor);
		},

		i(local) {
			if (local) {
				if (!div_intro) {
					add_render_callback(() => {
						div_intro = create_in_transition(div, foo, {});
						div_intro.start();
					});
				}
			}
		},

		o: noop,

		d(detach) {
			if (detach) {
				detachNode(div);
			}
		}
	};
}

function create_fragment(ctx) {
	var if_block_anchor;

	var if_block = (ctx.x) && create_if_block(ctx);

	return {
		c() {
			if (if_block) if_block.c();
			if_block_anchor = createComment();
		},

		m(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
		},

		p(changed, ctx) {
			if (ctx.x) {
				if (if_block) {
					if_block.p(changed, ctx);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},

		i: noop,
		o: noop,

		d(detach) {
			if (if_block) if_block.d(detach);

			if (detach) {
				detachNode(if_block_anchor);
			}
		}
	};
}

function foo() {}

function instance($$self, $$props, $$invalidate) {
	let { x, y } = $$props;

	$$self.$set = $$props => {
		if ('x' in $$props) $$invalidate('x', x = $$props.x);
		if ('y' in $$props) $$invalidate('y', y = $$props.y);
	};

	return { x, y };
}

class SvelteComponent extends SvelteComponent_1 {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal);
	}

	get x() {
		return this.$$.ctx.x;
	}

	set x(x) {
		this.$set({ x });
		flush();
	}

	get y() {
		return this.$$.ctx.y;
	}

	set y(y) {
		this.$set({ y });
		flush();
	}
}

export default SvelteComponent;