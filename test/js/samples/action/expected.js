/* generated by Svelte vX.Y.Z */
import { assign, createElement, detachNode, init, insertNode, noop, proto } from "svelte/shared.js";

function link(node) {
  
  function onClick(event) {
    event.preventDefault();
    history.pushState(null, null, event.target.href);
  }

  node.addEventListener('click', onClick);

  return {
    destroy() {
      node.removeEventListener('click', onClick);
    }
  }
};

function create_main_fragment(component, state) {
	var a, link_action;

	return {
		c: function create() {
			a = createElement("a");
			a.textContent = "Test";
			this.h();
		},

		h: function hydrate() {
			a.href = "#";
			link_action = link(a) || {};
		},

		m: function mount(target, anchor) {
			insertNode(a, target, anchor);
		},

		p: noop,

		u: function unmount() {
			detachNode(a);
		},

		d: function destroy() {
			if (typeof link_action.destroy === 'function') link_action.destroy();
		}
	};
}

function SvelteComponent(options) {
	init(this, options);
	this._state = assign({}, options.data);

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		this._fragment.c();
		this._mount(options.target, options.anchor);
	}
}

assign(SvelteComponent.prototype, proto);
export default SvelteComponent;