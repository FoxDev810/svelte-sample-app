/* generated by Svelte vX.Y.Z */
import { assign, createElement, detachNode, init, insertNode, noop, proto } from "svelte/shared.js";

function foo( node, callback ) {
	// code goes here
};

var methods = {
	foo ( bar ) {
		console.log( bar );
	}
};

function create_main_fragment(state, component) {
	var button, foo_handler;

	return {
		create: function() {
			button = createElement("button");
			button.textContent = "foo";
			this.hydrate();
		},

		hydrate: function() {
			foo_handler = foo.call(component, button, function(event) {
				var state = component.get();
				component.foo( state.bar );
			});
		},

		mount: function(target, anchor) {
			insertNode(button, target, anchor);
		},

		update: noop,

		unmount: function() {
			detachNode(button);
		},

		destroy: function() {
			foo_handler.teardown();
		}
	};
}

function SvelteComponent(options) {
	init(this, options);
	this._state = options.data || {};

	this._fragment = create_main_fragment(this._state, this);

	if (options.target) {
		this._fragment.create();
		this._fragment.mount(options.target, options.anchor || null);
	}
}

assign(SvelteComponent.prototype, methods, proto);
export default SvelteComponent;