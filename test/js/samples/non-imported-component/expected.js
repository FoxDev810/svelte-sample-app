/* generated by Svelte vX.Y.Z */
import { assign, callAll, createText, detachNode, init, insert, noop, proto } from "svelte/shared.js";
import Imported from 'Imported.html';



function create_main_fragment(component, ctx) {
	var text;

	var imported = new Imported({
		root: component.root,
		store: component.store
	});

	var nonimported = new NonImported({
		root: component.root,
		store: component.store
	});

	return {
		c() {
			imported._fragment.c();
			text = createText("\n");
			nonimported._fragment.c();
		},

		m(target, anchor) {
			imported._mount(target, anchor);
			insert(target, text, anchor);
			nonimported._mount(target, anchor);
		},

		p: noop,

		d(detach) {
			imported.destroy(detach);
			if (detach) {
				detachNode(text);
			}

			nonimported.destroy(detach);
		}
	};
}

function SvelteComponent(options) {
	init(this, options);
	this._state = assign({}, options.data);
	this._intro = true;

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		this._fragment.c();
		this._mount(options.target, options.anchor);

		this._lock = true;
		callAll(this._beforecreate);
		callAll(this._oncreate);
		callAll(this._aftercreate);
		this._lock = false;
	}
}

assign(SvelteComponent.prototype, proto);
export default SvelteComponent;