/* generated by Svelte vX.Y.Z */
import { assign, createElement, createText, detachNode, init, insert, proto } from "svelte/shared.js";

function create_main_fragment(component, ctx) {
	var div0, text, div1, div1_style_value;

	return {
		c() {
			div0 = createElement("div");
			text = createText("\n");
			div1 = createElement("div");
			div0.style.cssText = ctx.style;
			div1.style.cssText = div1_style_value = "" + ctx.key + ": " + ctx.value;
		},

		m(target, anchor) {
			insert(target, div0, anchor);
			insert(target, text, anchor);
			insert(target, div1, anchor);
		},

		p(changed, ctx) {
			if (changed.style) {
				div0.style.cssText = ctx.style;
			}

			if ((changed.key || changed.value) && div1_style_value !== (div1_style_value = "" + ctx.key + ": " + ctx.value)) {
				div1.style.cssText = div1_style_value;
			}
		},

		d(detach) {
			if (detach) {
				detachNode(div0);
				detachNode(text);
				detachNode(div1);
			}
		}
	};
}

function SvelteComponent(options) {
	init(this, options);
	this._state = assign({}, options.data);
	this._intro = true;

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		this._fragment.c();
		this._mount(options.target, options.anchor);
	}
}

assign(SvelteComponent.prototype, proto);
export default SvelteComponent;