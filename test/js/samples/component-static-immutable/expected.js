/* generated by Svelte vX.Y.Z */
import { _differsImmutable, assign, callAll, init, noop, proto } from "svelte/shared.js";

var Nested = window.Nested;

function create_main_fragment(state, component) {

	var nested = new Nested({
		root: component.root,
		data: { foo: "bar" }
	});

	return {
		c: function create() {
			nested._fragment.c();
		},

		m: function mount(target, anchor) {
			nested._mount(target, anchor);
		},

		p: noop,

		u: function unmount() {
			nested._unmount();
		},

		d: function destroy() {
			nested.destroy(false);
		}
	};
}

function SvelteComponent(options) {
	init(this, options);
	this._state = assign({}, options.data);

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this._state, this);

	if (options.target) {
		this._fragment.c();
		this._fragment.m(options.target, options.anchor || null);

		this._lock = true;
		callAll(this._beforecreate);
		callAll(this._oncreate);
		callAll(this._aftercreate);
		this._lock = false;
	}
}

assign(SvelteComponent.prototype, proto);

SvelteComponent.prototype._differs = _differsImmutable;
export default SvelteComponent;